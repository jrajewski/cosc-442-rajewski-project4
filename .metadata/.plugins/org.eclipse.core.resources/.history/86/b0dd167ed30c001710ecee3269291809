package edu.towson.cis.cosc442.project4.coffeemaker;

import junit.framework.TestCase;

/**
 *
 */
public class CoffeeMakerTest extends TestCase {
	private CoffeeMaker cm;
	private Inventory i;
	private Recipe r1, r2, r3, r4;
	

	public void setUp() {
		cm = new CoffeeMaker();
		i = cm.checkInventory();

		r1 = new Recipe();
		r1.setName("Coffee");
		r1.setPrice(50);
		r1.setAmtCoffee(6);
		r1.setAmtMilk(1);
		r1.setAmtSugar(1);
		r1.setAmtChocolate(0);
		
		r2 = new Recipe();
		r2.setName("Coffee2");
		r2.setPrice(50);
		r2.setAmtCoffee(1);
		r2.setAmtMilk(1);
		r2.setAmtSugar(1);
		r2.setAmtChocolate(0);
		
		r3 = new Recipe();
		r3.setName("Coffee2");
		r3.setPrice(50);
		r3.setAmtCoffee(1);
		r3.setAmtMilk(1);
		r3.setAmtSugar(1);
		r3.setAmtChocolate(0);
	}

	public void testAddRecipe1() {
		assertTrue(cm.addRecipe(r1));
	}
	
	//test to kill the negated conditional mutation
	public void testAddRecipe2(){
		
	}

	public void testDeleteRecipe1() {
		cm.addRecipe(r1);
		assertTrue(cm.deleteRecipe(r1));
	}
	
	//test to kill negated conditional mutant
	public void testDeleteRecipe2(){
		cm.addRecipe(r1);
		assertFalse(cm.deleteRecipe(r2));
	}

	public void testEditRecipe1() {
		cm.addRecipe(r1);
		Recipe newRecipe = new Recipe();
		newRecipe = r1;
		newRecipe.setAmtSugar(2);
		assertTrue(cm.editRecipe(r1, newRecipe));
	}
	
	public void testAddInventory1(){
		assertTrue(cm.addInventory(1, 1, 1, 1));
	}
	
	public void testAddInventory2(){
		assertFalse(cm.addInventory(1, 1, 1, -1));
	}
	
	//test cases to kill 8 mutants
	public void testAddInventory3(){
		assertFalse(cm.addInventory(-1, 0, 0, 0));
		assertFalse(cm.addInventory(0, -1, 0, 0));
		assertFalse(cm.addInventory(0, 0, -1, 0));
		assertFalse(cm.addInventory(0, 0, 0, -1));
	}
	
	public void testAddInventory4(){
		i = cm.checkInventory();
		assertTrue(cm.addInventory(1, 1, 1, 1));
		assertTrue(i.getChocolate() == 16);
		assertTrue(i.getCoffee() == 16);
		assertTrue(i.getMilk() == 16);
		assertTrue(i.getSugar() == 16);
	}
	
	public void testMakeCoffee1(){
		cm.addRecipe(r1);
		cm.addInventory(10, 10, 10, 10);
		cm.makeCoffee(r1, 50);
	}
	
	public void testMakeCoffee2(){
		cm.addRecipe(r1);
		cm.addInventory(10, 10, 10, 10);
		cm.makeCoffee(r1, 0);
	}
	
	//should not have enough ingredients
	public void testMakeCoffee3(){
		
		assertTrue(cm.makeCoffee(r2, 50) == 0));
	}
	
	public void testGetRecipeForName(){
		cm.addRecipe(r1);
		
		r2 = cm.getRecipeForName(r1.getName());
		String nameTest = r2.getName();
		assertTrue(nameTest.equalsIgnoreCase("Coffee"));
	}
}